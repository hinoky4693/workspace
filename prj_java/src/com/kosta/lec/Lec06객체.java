package com.kosta.lec;

//**********************************************************
// 인스턴스		변수/메서드
// 클래스(static)	변수/메서드
// 메모리에 올리는(인스턴스화 == 주소가 있다 == 참조 가능)
// 방식 두 가지 : new, static
//**********************************************************

public class Lec06객체 {
	
	// 전역변수
		   int iv = 0; // 인스턴스(화 new)	변수
	static int cv = 0; // 클래스(static) 	변수

//	**********************************************************
	// 오버로딩 : (하나의 클래스)에서 메서드 복붙해서 에러 안나게.
	// 1. 메서드 이름을 같게 	해라.
	// 2. 괄호를 다르게 해라(파라미터의 타입 or 갯수)
	// "메서드의 괄호 안에 들어가 있는 변수"
	// == 매개변수 == arguments == parameter == 인자
//	**********************************************************
	
	// 인스턴스 메서드
	public void main(String args) {
		// iv는 인스턴스 변수, main 인스턴스 메서드는
		// 클래스를 new 했을 때,
		// 클래스의 객체를 만들어서 참조변수.iv 호출
		// cv는 클래스(static)변수 --> static(실행시점에 메모리에 상주)	클래스.cv 호출
		//					   --> new						참조변수.cv 호출
		System.out.println(iv);
		System.out.println(cv);
		System.out.println("인스턴스 main 메서드");
	}
	
	
	// 클래스(static) 메서드
	public static void main(String[] args) {
		
		// 지역변수
		int num =0;
		System.out.println(num);
//		**********************************************************
//		에러 : int iv = 0, static void main...()
//		**********************************************************
//		iv는 인스턴스 변수라서 클래스(static)메서드에서는 호출 불가.
//		System.out.println(iv);

//		**********************************************************
//		해결 : iv: 인스턴스 변수를 호출 하려면 클래스의 객체를 만들어서 참조변수.iv 호출.
//		**********************************************************
		Lec06객체 rv = new Lec06객체();
		System.out.println(rv.iv); 		// 인스턴스변수 : 참조변수.iv
		System.out.println(Lec06객체.cv);	// 클래스변수 	: 클래스명.cv
		System.out.println(cv);			// 클래스메서드	:(클래스)cv
		
	}

}
